# -*- coding: utf-8 -*-
"""Cricket_Analysis.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ApAvid9Ax0EYBLhVWO5Gp-O8AN8hUBbk

# IPL DREAM TEAM PREDICTION
"""

# Importing basic libraries
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# Reading files
from google.colab import drive
drive.mount('/content/drive')

"""Creating Fantasy Point Table using dream11 app"""

byb=pd.read_csv('/content/drive/MyDrive/CSV/IPL Ball-by-Ball 2008-2020.csv')
match= pd.read_csv('/content/drive/MyDrive/CSV/IPL Matches 2008-2020.csv')
byb.head()

# Fantasy Points

Batsman_points = {'Run':1, 'bFour':1, 'bSix':2, '30Runs':4,
        'Half_century':8, 'Century':16, 'Duck':-2, '170sr':6,
                 '150sr':4, '130sr':2, '70sr':-2, '60sr':-4, '50sr':-6}

Bowling_points = {'Wicket':25, 'LBW_Bowled':8, '3W':4, '4W':8, 
                  '5W':16, 'Maiden':12, '5rpo':6, '6rpo':4, '7rpo':2, '10rpo':-2,
                 '11rpo':-4, '12rpo':-6}

Fielding_points = {'Catch':8, '3Cath':4, 'Stumping':12, 'RunOutD':12,
                  'RunOutInd':6}

"""Store players name in the team... you have to modify it when a team wins the toss and declares their team"""

#User Inputs


rcb= ['AB de Villiers', 'V Kohli', 'GJ Maxwell', 'D Padikkal', 'Shahbaz Ahmed',
      'DT Christian', 'HV Patel', 'Mohammed Siraj', 'YS Chahal', 'N Saini'  ]

mi = ['Q de Kock', 'Ishan Kishan','RG Sharma','SA Yadav', 'KA Pollard',
      'CA Lynn', 'A Singh','SS Tiwary',  'KH Pandya', 'HH Pandya',
      'JDS Neesham', 'JJ Bumrah',  'TA Boult', 'RD Chahar',  'AF Milne',
      'J Yadav', 'NM Coulter-Nile' ]

rcb_fp = {'AB de Villiers':417, 'V Kohli':414, 'GJ Maxwell':392, 'D Padikkal':431, 'Shahbaz Ahmed':194,
        'DT Christian':47, 'HV Patel':634, 'Mohammed Siraj':275, 'YS Chahal':242, 'N Saini':6  }
        
mi_fp = {'Q de Kock':365, 'Ishan Kishan':134,'RG Sharma':393,'SA Yadav':307, 'KA Pollard':423,
        'CA Lynn':85, 'A Singh':24,'SS Tiwary':85,  'KH Pandya':301, 'HH Pandya':121,
          'JDS Neesham':-4, 'JJ Bumrah':382,  'TA Boult':371, 'RD Chahar':374,  'AF Milne':98,
        'J Yadav':69, 'NM Coulter-Nile':4}

team1 = mi; team2 = rcb

for i in range(len(team1)):
    ffp = []
    for j in range(len(team2)):
        bat_vs_bowl = byb[(byb["batsman"]==team1[i]) & (byb["bowler"]==team2[j])]
        bowls_played = len(bat_vs_bowl.batsman_runs)
        runs_scored = sum(bat_vs_bowl.batsman_runs)
        fours = len(bat_vs_bowl[bat_vs_bowl['batsman_runs']==4])
        sixes = len(bat_vs_bowl[bat_vs_bowl['batsman_runs']==6])
        wicket = sum(bat_vs_bowl.is_wicket)
        if bowls_played <=6*10 and wicket >=5:
            penalty = -16
            print (team1[i], "ka wicket taken",wicket,"times by", team2[j])
        elif bowls_played <=6*8 and wicket >=4:
            penalty = -8
            print (team1[i], "ka wicket taken",wicket,"times by", team2[j])
        elif bowls_played <=6*6 and wicket >=3:
            penalty = -4
            print (team1[i], "'s wicket taken",wicket,"times by", team2[j])
        else:
            penalty = 0
        try:    
            strike_rate = int(runs_scored/bowls_played*100)
        except: 
            strike_rate = 'NA'

        if bowls_played >=8 and strike_rate!='NA':
            if strike_rate >=170:
                print (team1[i] ,"beaten", team2[j], "Runs", runs_scored,"bowls",bowls_played,"strike rate", strike_rate,'Out',wicket,'times', "Fours", fours,"Sixes", sixes)            
            elif strike_rate >=150:
                print (team1[i] ,"beaten", team2[j], "Runs", runs_scored,"bowls",bowls_played,"strike rate", strike_rate,'Out',wicket,'times', "Fours", fours,"Sixes", sixes)            
                        
        bowl_vs_bat = byb[(byb["bowler"]==team1[i]) & (byb["batsman"]==team2[j])]
        wicket_took = sum(bowl_vs_bat.is_wicket)
        fantasy_points1 = runs_scored + fours*Batsman_points['bFour'] + sixes*Batsman_points['bSix'] - wicket*Bowling_points['Wicket'] + wicket_took*Bowling_points['Wicket'] + penalty
        ffp.append(fantasy_points1)

"""Reverse the teams and check"""

team1 = rcb; team2 = mi

for i in range(len(team1)):
    ffp=[]
    for j in range(len(team2)):
        bat_vs_bowl = byb[(byb["batsman"]==team1[i]) & (byb["bowler"]==team2[j])]
        bowls_played = len(bat_vs_bowl.batsman_runs)
        runs_scored = sum(bat_vs_bowl.batsman_runs)
        fours = len(bat_vs_bowl[bat_vs_bowl['batsman_runs']==4])
        sixes = len(bat_vs_bowl[bat_vs_bowl['batsman_runs']==6])
        wicket = sum(bat_vs_bowl.is_wicket)
        if bowls_played <=6*10 and wicket >=5:
            penalty = -16
            print (team1[i], "ka wicket taken",wicket,"times by", team2[j])
        elif bowls_played <=6*8 and wicket >=4:
            penalty = -8
            print (team1[i], "ka wicket taken",wicket,"times by", team2[j])
        elif bowls_played <=6*6 and wicket >=3:
            penalty = -4
            print (team1[i], "'s wicket taken",wicket,"times by", team2[j])
        else:
            penalty = 0
        try:    
            strike_rate = int(runs_scored/bowls_played*100)
        except: 
            strike_rate = 'NA'

        if bowls_played >=8 and strike_rate!='NA':
            if strike_rate >=170:
                print (team1[i] ,"beaten", team2[j], "Runs", runs_scored,"bowls",bowls_played,"strike rate", strike_rate,'Out',wicket,'times', "Fours", fours,"Sixes", sixes)            
            elif strike_rate >=150:
                print (team1[i] ,"beaten", team2[j], "Runs", runs_scored,"bowls",bowls_played,"strike rate", strike_rate,'Out',wicket,'times', "Fours", fours,"Sixes", sixes)            
                        
        bowl_vs_bat = byb[(byb["bowler"]==team1[i]) & (byb["batsman"]==team2[j])]
        wicket_took = sum(bowl_vs_bat.is_wicket)
        fantasy_points1 = runs_scored + fours*Batsman_points['bFour'] + sixes*Batsman_points['bSix'] - wicket*Bowling_points['Wicket'] + wicket_took*Bowling_points['Wicket'] + penalty
        ffp.append(fantasy_points1)
#         print (team1[i] ,"against", team2[j], "Runs", runs_scored, 
#                "bowls",bowls_played,"strike rate", strike_rate,
#               'Out',wicket,'times', "Fours", fours,"Sixes", sixes, 'fantasy_points', fantasy_points1)

def get_players(team1,team2,team1_fp):
    fantasy_team_players = []

    for i in range(len(team1)):
        unq_ids = byb[byb["batsman"]==team1[i]]['id'].unique()
        mathces_played = len(unq_ids)
#         print ( "Number of matches played" , len(unq_ids),team1[i])
        bbr = []
        for x in unq_ids:
            bat_run = sum(byb[(byb["batsman"]==team1[i])&(byb['id']==x)]['batsman_runs'])
            bbr.append(bat_run)

        r30,r50,r100 =0,0,0
        for m in bbr:
            if m>=100:
                r100+=1
            elif m>=50:
                r50+=1
            elif m>=30:
                r30+=1
        try:
            catches = len(byb[(byb['fielder']==team1[i]) & (byb['dismissal_kind']=='caught')])/mathces_played
            run_outs = len(byb[(byb['fielder']==team1[i]) & (byb['dismissal_kind']=='run out')])/mathces_played
            extra_points = r30/mathces_played*Batsman_points['30Runs'] +r50/mathces_played*Batsman_points['Half_century'] +r100/mathces_played*Batsman_points['Century'] +catches*Fielding_points['Catch']+run_outs*Fielding_points['RunOutInd']
        except:
            catches, run_outs, extra_points = 0,0,0
        
        # Extra Points for bowlers to be estimated here
        wickets_taken = []
        for x in unq_ids:
            twx = sum(byb[(byb["bowler"]==team1[i]) & (byb['id']==x)]['is_wicket'])
            wickets_taken.append(twx)

        w3,w4,w5 = 0,0,0
        for z in wickets_taken:
            if z>=5:
                w5+=1
            elif z>=4:
                w4+=1
            elif z>=3:
                w3+=1
        try:
            lbws = len((byb[(byb['bowler']==team1[i]) & (byb['dismissal_kind']=='lbw')]))/mathces_played      
            bowled = len((byb[(byb['bowler']==team1[i]) & (byb['dismissal_kind']=='bowled')]))/mathces_played      
            wexp = w3/mathces_played*Bowling_points['3W'] + w4/mathces_played*Bowling_points['4W'] + w5/mathces_played*Bowling_points['5W'] + lbws*Bowling_points['LBW_Bowled'] + bowled*Bowling_points['LBW_Bowled']
        except:
            lbws, bowled, wexp = 0,0,0
        
        ffp = []
        for j in range(len(team2)):
            bat_vs_bowl = byb[(byb["batsman"]==team1[i]) & (byb["bowler"]==team2[j])]
            bowls_played = len(bat_vs_bowl.batsman_runs)
            runs_scored = sum(bat_vs_bowl.batsman_runs)
            fours = len(bat_vs_bowl[bat_vs_bowl['batsman_runs']==4])
            sixes = len(bat_vs_bowl[bat_vs_bowl['batsman_runs']==6])
            wicket = sum(bat_vs_bowl.is_wicket)
            if bowls_played <=6*10 and wicket >=5:
                penalty = -16
                print (team1[i], "ka wicket taken",wicket,"times by", team2[j])
            elif bowls_played <=6*8 and wicket >=4:
                penalty = -8
                print (team1[i], "ka wicket taken",wicket,"times by", team2[j])
            elif bowls_played <=6*6 and wicket >=3:
                penalty = -4
                print (team1[i], "'s wicket taken",wicket,"times by", team2[j])
            else:
                penalty = 0

            try:    
                strike_rate = int(runs_scored/bowls_played*100)
            except: 
                strike_rate = 'NA'            
            if bowls_played >=10 and strike_rate!='NA':
                if strike_rate >=170:
                    print (team1[i] ,"beaten", team2[j], "Runs", runs_scored,"bowls",bowls_played,"strike rate", strike_rate,'Out',wicket,'times', "Fours", fours,"Sixes", sixes)            
                elif strike_rate >=150:
                    print (team1[i] ,"beaten", team2[j], "Runs", runs_scored,"bowls",bowls_played,"strike rate", strike_rate,'Out',wicket,'times', "Fours", fours,"Sixes", sixes)            

                
            bowl_vs_bat = byb[(byb["bowler"]==team1[i]) & (byb["batsman"]==team2[j])]
            wicket_took = sum(bowl_vs_bat.is_wicket)
            fantasy_points1 = runs_scored + fours*Batsman_points['bFour'] + sixes*Batsman_points['bSix'] - wicket*Bowling_points['Wicket'] + wicket_took*Bowling_points['Wicket'] + penalty 
            ffp.append(fantasy_points1)
#             print (team1[i] ,"against", team2[j], "Runs", runs_scored, 
#                    "bowls",bowls_played,"strike rate", strike_rate,
#                   'Out',wicket,'times', "Fours", fours,"Sixes", sixes, "fatansy points",fantasy_points1)
        sum_ffp = sum(ffp)
        if team1_fp[team1[i]] > 0:
            recent_performace_points = np.log(team1_fp[team1[i]])
        elif team1_fp[team1[i]] <0:
            recent_performace_points = -np.log(abs(team1_fp[team1[i]]))
        else:
            recent_performace_points = 0
        # Trying a new method for recent performancec point
        recent_performace_points = team1_fp[team1[i]]/3
        weight1 = 0.5
        weight2 = 1 - weight1
        final_fantasy_point = (sum_ffp + extra_points + wexp)*weight1 + recent_performace_points*weight2
        final_fantasy_point = round(final_fantasy_point,2)
        fantasy_team_players.append((final_fantasy_point,team1[i]))
        fantasy_team_players.sort(reverse=True)
#         print ("Fatasy points of",team1[i],final_fantasy_point)
    return fantasy_team_players

t1 = get_players(mi, rcb, mi_fp)
print ('\n')
t2 = get_players(rcb, mi, rcb_fp)
t3 = t1 + t2
t3.sort(reverse = True)
print ("================================================\n")
print ("Team 1", t1)
print ("================================================\n")
print ("Team 2", t2)
print('\n Your final team')
t3[:15]

print ("Team 1", t1)
print ("\n================================================\n")
print ("Team 2", t2)
print('\n Your final team')
t3[:12]

